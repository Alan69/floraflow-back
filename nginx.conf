server {
    listen 80;
    server_name api.floraflow.tech;

    client_max_body_size 256M;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name api.floraflow.tech;

    client_max_body_size 256M;

    # SSL certificate and key files (generated by Certbot)
    ssl_certificate /etc/letsencrypt/live/api.floraflow.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.floraflow.tech/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;

    # Django project
    location / {
        proxy_pass http://web:8000;  # Proxy to the Django container
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /ws/ {
        proxy_pass http://web:8000;  # Proxy WebSocket traffic to Django container
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Media location - proxy to Django for Cloudinary handling
    location /media/ {
        proxy_pass http://web:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add caching headers
        add_header Cache-Control "public, max-age=3600";
        add_header Access-Control-Allow-Origin "*";
    }

    # Error pages
    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #     root /usr/share/nginx/html;
    # }
}

server {
    listen 80;
    server_name floraflow.tech www.floraflow.tech;

    client_max_body_size 256M;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name floraflow.tech www.floraflow.tech;

    ssl_certificate /etc/letsencrypt/live/floraflow.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/floraflow.tech/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;

    location / {
        proxy_pass http://web2:8001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /media/ {
        alias /app/media/;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}